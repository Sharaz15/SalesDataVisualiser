@page "/sales-summary"
@using Sales.Data
@inject ProductsService ProductService
@inject ILogger<SalesSummary> Logger

<PageTitle>Sales Summary</PageTitle>

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        <h4 class="alert-heading">Error</h4>
        <p>@errorMessage</p>
    </div>
}
else if (products == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Segment</th>
                <th>Country</th>
                <th>Product</th>
                <th>Discount Band</th>
                <th>Units Sold</th>
                <th>Manufacturing Price</th>
                <th>Sale Price</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Segment</td>
                    <td>@product.Country</td>
                    <td>@product.Product</td>
                    <td>@product.DiscountBand</td>
                    <td>@product.UnitsSold</td>
                    <td>@product.ManufacturingPrice</td>
                    <td>@product.SalePrice</td>
                    <td>@product.Date.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Products> products;
    private string errorMessage;

    protected override void OnInitialized()
    {
        try
        {
            products = ProductService.GetProducts();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, errorMessage);
            errorMessage = ex.Message;
        }
    }
}
